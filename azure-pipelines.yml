trigger:
  branches:
    include:
      - main 

variables:
  azureContainerRegistry: 'letestregistry.azurecr.io'  # ACR name with domain
  imageName: 'node-app'  # Docker image name
  kubernetesCluster: 'new-aks-cluster'  # AKS Cluster name
  kubernetesNamespace: 'default'  # Kubernetes namespace
  resourceGroup: 'newton-resources'  # Azure Resource Group
  terraformDirectory: 'terraform/'  # Directory for Terraform scripts
  AZURE_SUBSCRIPTION_CONNECTION: 'd49e6059-7e63-4b1d-b093-492b8a94c5cb'  # Azure Service Connection for Azure resources
  dockerRegistryConnection: 'letestregistry'  # ACR service connection name
  githubRepo: 'https://github.com/DnT-Nutan/Terraform_Pipeline.git'  # GitHub repository URL

stages:
- stage: ProvisionInfrastructure
  jobs:
  - job: Provision
    displayName: 'Provision Azure Infrastructure with Terraform'
    pool: laptops

    steps:
    # Install Terraform
    - script: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - && \
        sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main" && \
        sudo apt-get update && sudo apt-get install terraform
        terraform version
      displayName: 'Install Terraform'

    - script: |
        echo "Initializing Terraform..."
        cd $(terraformDirectory) && terraform init  
      displayName: 'Initialize Terraform'

#    - script: |
#        echo "Terraform plan..."
#       cd $(terraformDirectory) && terraform plan 
#      displayName: 'Terraform Plan'

    - script: |
        echo "Applying Terraform configurations..."
        cd $(terraformDirectory) && terraform apply -auto-approve 
      displayName: 'Apply Terraform'

